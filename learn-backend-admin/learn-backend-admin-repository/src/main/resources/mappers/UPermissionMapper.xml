<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gzs.learn.backend.admin.repository.UPermissionMapper">
    <resultMap id="BaseResultMap" type="com.gzs.learn.backend.admin.entity.UPermission">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List">
        id, url, name
    </sql>

    <sql id="where_all">
        <where>
            <if test="findContent != null and findContent !='' ">
                and (
                    LOWER(name) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%") or
                    LOWER(url)  like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")
                )
            </if>
        </where>
    </sql>
    <select id="findAll" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List" />
        from
            u_permission
        <include refid="where_all" />
    </select>
    
    <select id="findCount" resultMap="BaseResultMap">
        select 
            count(id) 
        from 
            u_permission 
        <include refid="where_all" />
    </select>
    
    <select id="selectPermissionById" resultType="com.gzs.learn.backend.admin.permission.bo.UPermissionBo">
        select
            up.id,urp.rid roleId,up.name,up.url,ifnull(urp.rid,0)marker
        from 
            u_permission up
            left join u_role_permission urp on urp.pid = up.id and urp.rid = #{id,jdbcType=INTEGER};
    </select>
    <!-- 根据用ID查询permission -->
    <select id="findPermissionByUserId" resultType="java.lang.String">
        select 
            p.url
        from 
            u_permission p 
            join u_role_permission rp on p.id = rp.pid
            join u_user_role ur on rp.rid = ur.rid
        where 
            ur.uid =#{id,jdbcType=BIGINT}
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
            <include refid="Base_Column_List" />
        from 
            u_permission
        where 
            id = #{id,jdbcType=BIGINT}
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from u_permission where id = #{id,jdbcType=BIGINT}
    </delete>
    
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
        parameterType="com.gzs.learn.backend.admin.entity.UPermission">
        insert into u_permission 
        (id, url, name)
        values 
        (#{id,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR})
    </insert>
    
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
        parameterType="com.gzs.learn.backend.admin.entity.UPermission">
        insert into u_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="name != null">
                name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.gzs.learn.backend.admin.entity.UPermission">
        update u_permission
        <set>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    
    <update id="updateByPrimaryKey" parameterType="com.gzs.learn.backend.admin.entity.UPermission">
        update u_permission
        set 
            url = #{url,jdbcType=VARCHAR},
            name =#{name,jdbcType=VARCHAR}
        where 
            id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
